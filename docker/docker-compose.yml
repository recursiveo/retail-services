version: '3.8'

name: retail-services
services:
  ## database setup
  mariadb:
    container_name: mariadb
    image: mariadb:latest
    # restart: always
    environment:
      MYSQL_ROOT_PASSWORD : root
      MYSQL_DATABASE: RetailServices
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql_data:/var/lib/mysql
  mongo:
    image: mongo:latest
    restart: on-failure
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express:latest
    ports:
      - "8088:8081"
    restart: on-failure
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_BASICAUTH_USERNAME: user
      ME_CONFIG_BASICAUTH_PASSWORD: user
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/
    depends_on:
      - mongo

  ## Security
  keyclock-mysql:
    container_name: keyclock-mysql
    image: mariadb:latest
    ports:
      - "3307:3306"
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keyclock
      MYSQL_USER: keyclock
      MYSQL_PASSWORD: password
    volumes:
      - ./keyclock/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - keyclock_data:/var/lib/mysql

  keyclock:
    image: quay.io/keycloak/keycloak:23.0.1
    command: ["start-dev", "--import-realm"]
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      DB_VENDOR: MYSQL
      DB_ADDR: keyclock-mysql
      # DB_PORT: 3306
      DB_DATABASE: keyclock
      DB_USER: keyclock
      DB_SCHEMA: public
      DB_PASSWORD: password
    ports:
      - "8090:8080"
    volumes:
      - ./keyclock/realms:/opt/keycloak/data/import
    depends_on: [keyclock-mysql]
#    restart: unless-stopped


  ## For distributed tracing - Grafana stack
  loki:
    image: grafana/loki:main
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"

  prometheus:
    image: prom/prometheus:v2.45.1
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

  tempo:
    image: grafana/tempo:2.3.1
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
      - ./tempo/tempo.yml:/etc/tempo.yml:ro
      - ./tempo/tempo-data:/tmp/tempo
    ports:
      - "3110:3100"  # Tempo
      - "9411:9411" # zipkin

  grafana:
    image: grafana/grafana:10.2.2
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources:ro
    environment:
      # - GF_AUTH_ANONYMOUS_ENABLED=true
      # - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      # - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_AUTH_DISABLE_LOGIN_FORM=false
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    restart: on-failure

  ## Kafka config
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      # KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

volumes:
  mysql_data:
  mongo_data:
  keyclock_data: